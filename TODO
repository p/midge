USER VISIBLE

- keep history of last 100 changes (bug, timestamp, who, what)

- keep history of last 100 snapshots of counts of bugs in different
states (display as differences)

- update the web site to use e.g. perhaps like www.openzaurus.org

- enforce lower case usernames(?)
- add ability to edit title
- add ability for the user to change their username
- add ability to search by users
- add ability to add attachments
- history of changes (to each bug), and list of recently changed bugs
- search by history?

- detect and prevent simultaneous attempts to change same data
- check everywhere redirecting when not logged in
- limit length of field in new state values
- inform the user when their session has timed-out
- fix: timed out session, then post. The post is not passed on after relogin

UNDERLYING

- fix this:
Nov  2 12:11:52 localhost [midge] ERROR Traceback (most recent call last):
Nov  2 12:11:52 localhost [midge] ERROR   File "/usr/lib/python2.3/site-packages/midge/server.py", line 183, in do_GET
Nov  2 12:11:52 localhost [midge] ERROR     self.wfile.write(wfile.getvalue())
Nov  2 12:11:52 localhost [midge] ERROR   File "/usr/lib/python2.3/socket.py", line 254, in write
Nov  2 12:11:52 localhost [midge] ERROR     self.flush()
Nov  2 12:11:52 localhost [midge] ERROR   File "/usr/lib/python2.3/socket.py", line 241, in flush
Nov  2 12:11:52 localhost [midge] ERROR     self._sock.sendall(buffer)
Nov  2 12:11:52 localhost [midge] ERROR error: (32, 'Broken pipe')
Nov  2 12:11:52 localhost [midge] ERROR Fatal error - exiting with traceback...
Nov  2 12:11:52 localhost [midge] ERROR Traceback (most recent call last):
Nov  2 12:11:52 localhost [midge] ERROR   File "/usr/local/bin/midged", line 19, in ?
Nov  2 12:11:52 localhost [midge] ERROR     server.Server(app, locations).start()
Nov  2 12:11:52 localhost [midge] ERROR   File "/usr/lib/python2.3/site-packages/midge/server.py", line 265, in start
Nov  2 12:11:52 localhost [midge] ERROR     self.httpd.handle_request()
Nov  2 12:11:52 localhost [midge] ERROR   File "/usr/lib/python2.3/SocketServer.py", line 224, in handle_request
Nov  2 12:11:52 localhost [midge] ERROR     self.handle_error(request, client_address)
Nov  2 12:11:52 localhost [midge] ERROR   File "/usr/lib/python2.3/SocketServer.py", line 270, in handle_error
Nov  2 12:11:52 localhost [midge] ERROR     traceback.print_exc() # XXX But this goes to stderr!
Nov  2 12:11:52 localhost [midge] ERROR   File "/usr/lib/python2.3/traceback.py", line 210, in print_exc
Nov  2 12:11:52 localhost [midge] ERROR     print_exception(etype, value, tb, limit, file)
Nov  2 12:11:52 localhost [midge] ERROR   File "/usr/lib/python2.3/traceback.py", line 122, in print_exception
Nov  2 12:11:52 localhost [midge] ERROR     _print(file, 'Traceback (most recent call last):')
Nov  2 12:11:52 localhost [midge] ERROR   File "/usr/lib/python2.3/traceback.py", line 13, in _print
Nov  2 12:11:52 localhost [midge] ERROR     file.write(str+terminator)
Nov  2 12:11:52 localhost [midge] ERROR IOError: [Errno 5] Input/output error

- and/or this:
Nov 10 13:08:16 localhost [midge] ERROR Traceback (most recent call last):
Nov 10 13:08:16 localhost [midge] ERROR   File "/usr/lib/python2.3/site-packages/midge/server.py", line 182, in do_GET
Nov 10 13:08:16 localhost [midge] ERROR     self._send_standard_header(session_id, location.mime_type)
Nov 10 13:08:16 localhost [midge] ERROR   File "/usr/lib/python2.3/site-packages/midge/server.py", line 110, in _send_standard_header
Nov 10 13:08:16 localhost [midge] ERROR     self.send_header("Server", self.SERVER_NAME)
Nov 10 13:08:16 localhost [midge] ERROR   File "/usr/lib/python2.3/BaseHTTPServer.py", line 383, in send_header
Nov 10 13:08:16 localhost [midge] ERROR     self.wfile.write("%s: %s\r\n" % (keyword, value))
Nov 10 13:08:16 localhost [midge] ERROR   File "/usr/lib/python2.3/socket.py", line 254, in write
Nov 10 13:08:16 localhost [midge] ERROR     self.flush()
Nov 10 13:08:16 localhost [midge] ERROR   File "/usr/lib/python2.3/socket.py", line 241, in flush
Nov 10 13:08:16 localhost [midge] ERROR     self._sock.sendall(buffer)
Nov 10 13:08:16 localhost [midge] ERROR error: (32, 'Broken pipe')
Nov 10 13:08:16 localhost [midge] ERROR Fatal error - exiting with traceback...
Nov 10 13:08:18 localhost [midge] ERROR Traceback (most recent call last):
Nov 10 13:08:18 localhost [midge] ERROR   File "/usr/local/bin/midged", line 19, in ?
Nov 10 13:08:18 localhost [midge] ERROR     server.Server(app, locations).start()
Nov 10 13:08:18 localhost [midge] ERROR   File "/usr/lib/python2.3/site-packages/midge/server.py", line 265, in start
Nov 10 13:08:18 localhost [midge] ERROR     self.httpd.handle_request()
Nov 10 13:08:18 localhost [midge] ERROR   File "/usr/lib/python2.3/SocketServer.py", line 224, in handle_request
Nov 10 13:08:18 localhost [midge] ERROR     self.handle_error(request, client_address)
Nov 10 13:08:18 localhost [midge] ERROR   File "/usr/lib/python2.3/SocketServer.py", line 270, in handle_error
Nov 10 13:08:18 localhost [midge] ERROR     traceback.print_exc() # XXX But this goes to stderr!
Nov 10 13:08:18 localhost [midge] ERROR   File "/usr/lib/python2.3/traceback.py", line 210, in print_exc
Nov 10 13:08:18 localhost [midge] ERROR     print_exception(etype, value, tb, limit, file)
Nov 10 13:08:18 localhost [midge] ERROR   File "/usr/lib/python2.3/traceback.py", line 122, in print_exception
Nov 10 13:08:18 localhost [midge] ERROR     _print(file, 'Traceback (most recent call last):')
Nov 10 13:08:18 localhost [midge] ERROR   File "/usr/lib/python2.3/traceback.py", line 13, in _print
Nov 10 13:08:18 localhost [midge] ERROR     file.write(str+terminator)
Nov 10 13:08:18 localhost [midge] ERROR IOError: [Errno 5] Input/output error

- don't record times in daylight savings time
- make it possible to run several midges (projects) on the same box (/etc/midge.conf)
   - pass location of config file on command line?
- write io tests
- add server unittests
- automatically clear unused user-set categories
- rename to midge/src and htdocs
- declare DTD
- automatically validate the pages with http://validator.w3.org/
- group template.py functions into classes
- consolidate status strings into Statuses object in application.py
- grep *.py TODO
- locations.py should probably contain no html (all in templates.py)
- raise exceptions rather than return None in Application if not logged in
